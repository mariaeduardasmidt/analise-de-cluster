# -*- coding: utf-8 -*-
"""ClusterAnalysis.ipynb
Generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SXZaqoiIqiwR3DGQ5ck2YQXtD-k-9TyG

**Análise de Cluster**

> Utilizando o dataset [Mall_Customers](https://www.kaggle.com/datasets/akram24/mall-customers?select=Mall_Customers.csv)
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import scipy.cluster.hierarchy as sch

dataset = pd.read_csv('Mall_Customers.csv')

dataset.head()

x = dataset.iloc[:, [3,4]]

x.head()

"""**Aplicando Dendograma, com o objetivo de encontrar o número de Clusters**"""

import scipy.cluster.hierarchy as sch

dendograma = sch.dendrogram(sch.linkage(x, method = 'ward'))
plt.title('Dendogramas')
plt.xlabel('Clientes')
plt.ylabel('Distâncias Euclidianas')
plt.show()

from sklearn.cluster import AgglomerativeClustering

hc = AgglomerativeClustering(n_clusters = 5, affinity = 'euclidean', linkage = 'ward')
y_hc = hc.fit_predict(x)

y_hc

plt.figure(1, figsize = (15,7))
plt.scatter(x[y_hc == 0]['Annual Income (k$)'], x[y_hc == 0]['Spending Score (1-100)'], s = 100, c= 'red', label = 'Cluster1')
plt.scatter(x[y_hc == 1]['Annual Income (k$)'], x[y_hc == 1]['Spending Score (1-100)'], s = 100, c= 'blue', label = 'Cluster2')
plt.scatter(x[y_hc == 2]['Annual Income (k$)'], x[y_hc == 2]['Spending Score (1-100)'], s = 100, c= 'green', label = 'Cluster3')
plt.scatter(x[y_hc == 3]['Annual Income (k$)'], x[y_hc == 3]['Spending Score (1-100)'], s = 100, c= 'cyan', label = 'Cluster4')
plt.scatter(x[y_hc == 4]['Annual Income (k$)'], x[y_hc == 4]['Spending Score (1-100)'], s = 100, c= 'black', label = 'Cluster5')
plt.title('Clusters de Clientes (Modelo hierárquico de Cluster)')
plt.xlabel('Renda Anual($)')
plt.ylabel('Pontuação de Gastos(1-100')
plt.show()

""" **Representando visualmente o número de Clusters** """

import seaborn as sns
import plotly as py
import plotly.graph_objs as go
from sklearn.cluster import KMeans
import os
py.offline.init_notebook_mode(connected = True)

df = pd.read_csv('Mall_Customers.csv')

df.head()

from pandas.core import algorithms
x2 = df[['Annual Income (k$)', 'Spending Score (1-100)']].iloc[:,:].values
inertia = []
for n in range (1,11):
  algorithm = (KMeans(n_clusters =n))
  algorithm.fit(x2)
  inertia.append(algorithm.inertia_)

plt.figure(1, figsize = (15, 6))
plt.plot(np.arange(1, 11), inertia, 'o')
plt.plot(np.arange(1, 11), inertia, '-', alpha = 0.5)
plt.xlabel('Número de Clusters')
plt.ylabel('Soma das distâncias Q intra clusters')
plt.show()

algorithm = (KMeans(n_clusters = 5))
algorithm.fit(x2)

x2

labels2 = algorithm.labels_
plt.figure(1, figsize = (15, 7))
plt.scatter(x = 'Annual Income (k$)', y = 'Spending Score (1-100)', 
            data =  df, c = labels2, s = 200)
plt.xlabel('Pontuação de Gastos (1-100)')
plt.ylabel('Renda Anual ($)')
plt.show()

""" # Desenvolvido por: Maria Eduarda Smidt """